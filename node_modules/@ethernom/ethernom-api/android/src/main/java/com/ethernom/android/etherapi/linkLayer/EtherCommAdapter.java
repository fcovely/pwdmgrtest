package com.ethernom.android.etherapi.linkLayer;
import android.content.Context;

import com.ethernom.android.etherapi.CardInfo;
import com.ethernom.android.etherapi.DiscoverServiceListener;
import com.ethernom.android.etherapi.UnSolicitedEventListener;

import java.util.ArrayList;


abstract public class EtherCommAdapter {
    // adapter error codes

    public static int SCAN_FOREVER = -1;
    protected boolean _scanAllowDuplicates;
    protected long _scanSecsTimeout;
    protected ArrayList<CardInfo> _foundCards = null;
    protected boolean _scanStopScanOnWrite;

    public CardEventListener CardEventListener = null;
    public DiscoverServiceListener DiscoverServiceEventListener = null;

    abstract public TInterface GetInterface();
    abstract public void Init(int servicePort, long secsTimeout, boolean allowDuplicates, boolean stopScanOnWrite, Context context);
    abstract public void Init(String UUID, long secsTimeout, boolean allowDuplicates, boolean stopScanOnWrite, Context context);

    // these need to set the link layer specific address of the BLE adapter, COM/USB adapter or NFC
    // as appropriate to the link layer in question

    abstract public String GetAdapterAddress();
    abstract public void SetAdapterAddress(String address);

    // we have to have a way to open the connection to the card and provide
    abstract public void Discover();
    abstract public void StopDiscovery();
    abstract public void CardOpen(CardInfo cardInfo);
    abstract public void CardClose();

    public void SetCardEventListener(CardEventListener listener){
        CardEventListener = listener;
    }
    public void SetDiscoverServiceEventListener(DiscoverServiceListener listener){
        DiscoverServiceEventListener = listener;
    }

    // a way to write byte buffers
    abstract public void WriteToCard(byte [] buffer);

}

